//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.3.0
//     from Assets/Scripts/Player Scripts/PlayerControls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerControls : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerControls()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerControls"",
    ""maps"": [
        {
            ""name"": ""InGame"",
            ""id"": ""412b2029-061a-4481-90ef-a891ea63f3c9"",
            ""actions"": [
                {
                    ""name"": ""Movement_KB"",
                    ""type"": ""Value"",
                    ""id"": ""8b7a43b9-2c9e-4ffc-b17d-305c6c4b87cf"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Movement_M_Hold"",
                    ""type"": ""Button"",
                    ""id"": ""d93b3b53-7b69-494d-9fbc-0fab9e601afc"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Movement_M_Position"",
                    ""type"": ""Value"",
                    ""id"": ""3337e945-ef21-4f54-8e9f-ec486fed0881"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""WASD"",
                    ""id"": ""90fac4e9-8844-455e-b1d2-85285e757708"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement_KB"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""465ac99a-d41a-4897-b702-c1558d51f047"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement_KB"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""4ab82c76-225c-4754-ba2e-0b3c92bd292b"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement_KB"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""acde02c4-3d91-4833-8e50-d4c64717b3ed"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement_KB"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""9a0efd49-c3dd-416b-b46a-ffbf54282ee6"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement_KB"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""ARROWS"",
                    ""id"": ""742ea490-f8a5-49f2-8477-9c21e3575505"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement_KB"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""e8f5f842-3348-4887-ab64-cbfb0e816988"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement_KB"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""7e72253f-d785-44ab-9ad6-2618f24ef704"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement_KB"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""d1fe6f5b-23b7-4c77-be7d-6d6bab864393"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement_KB"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""9c384fc2-5d64-4855-ba6e-156c80c4bec9"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement_KB"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""b919d985-0ae4-477c-abd2-dcb084624bd5"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": ""Hold"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement_M_Hold"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a6825eb6-c676-4fbe-a39f-c620ce1a9721"",
                    ""path"": ""<Touchscreen>/Press"",
                    ""interactions"": ""Hold"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement_M_Hold"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ea79581c-b05c-41e0-a574-7ce5451b9131"",
                    ""path"": ""<Mouse>/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement_M_Position"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""85ea66b2-f89e-4fe7-a75b-2eccd1a5cfc7"",
                    ""path"": ""<Touchscreen>/primaryTouch/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement_M_Position"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // InGame
        m_InGame = asset.FindActionMap("InGame", throwIfNotFound: true);
        m_InGame_Movement_KB = m_InGame.FindAction("Movement_KB", throwIfNotFound: true);
        m_InGame_Movement_M_Hold = m_InGame.FindAction("Movement_M_Hold", throwIfNotFound: true);
        m_InGame_Movement_M_Position = m_InGame.FindAction("Movement_M_Position", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // InGame
    private readonly InputActionMap m_InGame;
    private IInGameActions m_InGameActionsCallbackInterface;
    private readonly InputAction m_InGame_Movement_KB;
    private readonly InputAction m_InGame_Movement_M_Hold;
    private readonly InputAction m_InGame_Movement_M_Position;
    public struct InGameActions
    {
        private @PlayerControls m_Wrapper;
        public InGameActions(@PlayerControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @Movement_KB => m_Wrapper.m_InGame_Movement_KB;
        public InputAction @Movement_M_Hold => m_Wrapper.m_InGame_Movement_M_Hold;
        public InputAction @Movement_M_Position => m_Wrapper.m_InGame_Movement_M_Position;
        public InputActionMap Get() { return m_Wrapper.m_InGame; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(InGameActions set) { return set.Get(); }
        public void SetCallbacks(IInGameActions instance)
        {
            if (m_Wrapper.m_InGameActionsCallbackInterface != null)
            {
                @Movement_KB.started -= m_Wrapper.m_InGameActionsCallbackInterface.OnMovement_KB;
                @Movement_KB.performed -= m_Wrapper.m_InGameActionsCallbackInterface.OnMovement_KB;
                @Movement_KB.canceled -= m_Wrapper.m_InGameActionsCallbackInterface.OnMovement_KB;
                @Movement_M_Hold.started -= m_Wrapper.m_InGameActionsCallbackInterface.OnMovement_M_Hold;
                @Movement_M_Hold.performed -= m_Wrapper.m_InGameActionsCallbackInterface.OnMovement_M_Hold;
                @Movement_M_Hold.canceled -= m_Wrapper.m_InGameActionsCallbackInterface.OnMovement_M_Hold;
                @Movement_M_Position.started -= m_Wrapper.m_InGameActionsCallbackInterface.OnMovement_M_Position;
                @Movement_M_Position.performed -= m_Wrapper.m_InGameActionsCallbackInterface.OnMovement_M_Position;
                @Movement_M_Position.canceled -= m_Wrapper.m_InGameActionsCallbackInterface.OnMovement_M_Position;
            }
            m_Wrapper.m_InGameActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Movement_KB.started += instance.OnMovement_KB;
                @Movement_KB.performed += instance.OnMovement_KB;
                @Movement_KB.canceled += instance.OnMovement_KB;
                @Movement_M_Hold.started += instance.OnMovement_M_Hold;
                @Movement_M_Hold.performed += instance.OnMovement_M_Hold;
                @Movement_M_Hold.canceled += instance.OnMovement_M_Hold;
                @Movement_M_Position.started += instance.OnMovement_M_Position;
                @Movement_M_Position.performed += instance.OnMovement_M_Position;
                @Movement_M_Position.canceled += instance.OnMovement_M_Position;
            }
        }
    }
    public InGameActions @InGame => new InGameActions(this);
    public interface IInGameActions
    {
        void OnMovement_KB(InputAction.CallbackContext context);
        void OnMovement_M_Hold(InputAction.CallbackContext context);
        void OnMovement_M_Position(InputAction.CallbackContext context);
    }
}
